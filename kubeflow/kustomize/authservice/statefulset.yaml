apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: authservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authservice
  serviceName: authservice
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: authservice
    spec:
      serviceAccountName: authservice
      initContainers:
      - name: update-ca
        image: alpine
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /usr/local/share/ca-certificates/ca.crt
          name: keycloak-cluster-local-tls
          subPath: ca.crt
        - mountPath: /certs-output
          name: ca-certificates
        command:
        - sh
        args:
        - -c
        - |
          set -o errexit;
          apk add ca-certificates;
          update-ca-certificates;
          cp -rv /etc/ssl/certs/ca-certificates.crt /certs-output
      containers:
      - name: authservice
        image: gcr.io/arrikto/kubeflow/oidc-authservice:e236439
        imagePullPolicy: Always
        ports:
        - name: http-api
          containerPort: 8080
        envFrom:
          - secretRef:
              name: oidc-authservice-client
          - configMapRef:
              name: oidc-authservice-parameters
        volumeMounts:
          - name: data
            mountPath: /var/lib/authservice
          - name: ca-certificates
            subPath: ca-certificates.crt
            mountPath: /etc/ssl/certs/ca-certificates.crt
        readinessProbe:
            httpGet:
              path: /
              port: 8081
      securityContext:
        fsGroup: 111
      volumes:
        - name: data
          persistentVolumeClaim:
              claimName: authservice-pvc
        - name: keycloak-cluster-local-tls
          secret:
            secretName: keycloak-cluster-local-tls
        - name: ca-certificates
          emptyDir: {}
