apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: default-cluster-local
  namespace: default
spec:
  secretName: default-cluster-local-tls
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
  duration: 2160h0m0s # 90d
  renewBefore: 360h0m0s # 15d
  subject:
    organizations:
    - cluster.local
    organizationalUnits:
    - default.cluster.local
  commonName: default.cluster.local
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
    - "*.default.svc.cluster.local"
  issuerRef:
    name: cluster-local-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-files
  namespace: default
data:
  bundle.sh: |
    #!/bin/bash
    set -o errexit
    cat $1/*.crt > $2/bundle-ca.crt
  nginx.conf: |
    # override
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    # HTTP
    server {
        server_name  localhost;
        listen       80;
        listen  [::]:80;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # HTTPS
    server {
        server_name  localhost;
        listen       443 ssl http2;
        ssl_certificate /certs/tls.crt;
        ssl_certificate_key /certs/tls.key;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
# mount certs and key
apiVersion: v1
kind: Pod
metadata:
  name: test-server
  namespace: default
  labels:
    app: test-server
spec:
  volumes:
  - name: files
    configMap:
      name: test-files
      defaultMode: 0777
  - name: certs
    secret:
      secretName: default-cluster-local-tls
      # defaultMode: 0400

  initContainers:
  - name: init-bundle-ca
    image: busybox:1.28
    command:
    - sh
    - /files/bundle.sh
    args:
    - /tmp/certs
    - /tmp
    volumeMounts:
    - mountPath: /files
      name: files
    - mountPath: /tmp/certs
      name: certs
  containers:
  - name: main
    image: nginx
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: /certs
      name: certs
    - mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
      name: files
    - mountPath: /etc/nginx/conf.d/default.conf
      subPath: default.conf
      name: files
    resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: test-server
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: test-server
  ports:
  - name: http-redis
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https-redis
    port: 443
    protocol: TCP
    targetPort: 443
---
apiVersion: batch/v1
kind: Job
metadata:
  name: test-client-job
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: certs
        secret:
          secretName: default-cluster-local-tls
          # defaultMode: 0400
      containers:
      - name: main
        image: curlimages/curl
        imagePullPolicy: IfNotPresent
        command:
        - sh
        args:
        - -c
        - "curl -vL --cacert /certs/ca.crt https://test-server.default.svc.cluster.local:443"
        volumeMounts:
        - mountPath: /certs
          name: certs
        resources: {}
      restartPolicy: OnFailure
  backoffLimit: 4
