image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 24.0.4-debian-12-r1
  digest: ""
  pullPolicy: IfNotPresent
  debug: false

auth:
  adminUser: keycloak_admin
  adminPassword: keycloak_admin

tls:
  enabled: true
  autoGenerated: false
  existingSecret: "keycloak-cluster-local-tls"
  usePem: true

production: true

proxy: passthrough
httpRelativePath: "/"
enableDefaultInitContainers: true

replicaCount: 1

ingress:
  enabled: true
  pathType: ImplementationSpecific
  path: "{{ .Values.httpRelativePath }}"
  hostname: keycloak.keycloak.svc.cluster.local
  servicePort: https
  ingressClassName: nginx
  annotations:
    # cert-manager.io/inject-ca-from: keycloak/keycloak-cluster-local
    cert-manager.io/cluster-issuer: cluster-local-issuer
    # kubernetes.io/ingress.allow-http: "false"
    # ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-taget: /
    nginx.ingress.kubernetes.io/rewrite-log: "true"
  tls: true
  selfSigned: false
  extraHosts:
  - name: keycloak.geniouslab.io
    path: /
  extraTls:
  - hosts:
    - keycloak.keycloak.svc.cluster.local
    - keycloak.geniouslab.io
    secretName: keycloak-ingress-tls

adminIngress:
  enabled: true
  pathType: ImplementationSpecific
  path: "{{ .Values.httpRelativePath }}"
  hostname: keycloak.geniouslab.io
  servicePort: https
  ingressClassName: nginx
  annotations:
    # cert-manager.io/inject-ca-from: kubeflow/serving-cert
    cert-manager.io/cluster-issuer: cluster-local-issuer
    # kubernetes.io/ingress.allow-http: "false"
    # ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-taget: /
    nginx.ingress.kubernetes.io/rewrite-log: "true"
  tls: true
  selfSigned: false
  # extraHosts:
  # - name: keycloak.geniouslab.io
  #   path: /
  extraTls:
  - hosts:
    - keycloak.geniouslab.io
    secretName: keycloak-admin-ingress-tls

rbac:
  create: true

metrics:
  enabled: false

postgresql:
  enabled: false

externalDatabase:
  host: postgresql.postgresql.svc.cluster.local
  port: 5432
  database: keycloak
  user: keycloak_service
  password: keycloak_service
  # existingSecret: ""
  # existingSecretPasswordKey: ""

cache:
  enabled: false
  stackName: kubernetes
  stackFile: ""

logging:
  output: default
  level: INFO

## Configuration for keycloak-config-cli
## ref: https://github.com/adorsys/keycloak-config-cli
##
keycloakConfigCli:
  enabled: true
  ## @param keycloakConfigCli.configuration keycloak-config-cli realms configuration
  ## NOTE: nil keys will be considered files to import locally
  ## Example:
  ## configuration:
  ##   realm1.json: |
  ##     {
  ##       "realm": "realm1",
  ##       "clients": []
  ##     }
  ##   realm2.yaml: |
  ##     realm: realm2
  ##     clients: []
  ##
  configuration: {}
  ## @param keycloakConfigCli.existingConfigmap ConfigMap with keycloak-config-cli configuration
  ## NOTE: This will override keycloakConfigCli.configuration
  ##
  existingConfigmap: keycloak-init
  ## Automatic Cleanup for Finished Jobs
  ## @param keycloakConfigCli.cleanupAfterFinished.enabled Enables Cleanup for Finished Jobs
  ## @param keycloakConfigCli.cleanupAfterFinished.seconds Sets the value of ttlSecondsAfterFinished
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/
  ##
  cleanupAfterFinished:
    enabled: false
    seconds: 600
