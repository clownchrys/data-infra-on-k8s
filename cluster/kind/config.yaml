kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
# name: kind

# https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/
featureGates:
# CSIMigration: true

# https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
runtimeConfig:
# "api/alpha": "false"

# https://kind.sigs.k8s.io/docs/user/configuration/#networking
networking:
  ipFamily: ipv4 # ipv4 | ipv6 | dual
  apiServerAddress: 127.0.0.1
  apiServerPort: 6443
  # podSubnet: "10.244.0.0/16" # Pod Network Subnet
  # serviceSubnet: "10.96.0.0/12" # Clsuter Network Subnet
  disableDefaultCNI: true
  # kubeProxyMode: "ipvs"

containerdConfigPatches:
  - |
    [plugins."io.containerd.grpc.v1.cri".registry]
    config_path = "/etc/containerd/certs.d"

# https://kind.sigs.k8s.io/docs/user/configuration/#nodes
nodes:
  - role: control-plane
    # https://kind.sigs.k8s.io/docs/user/configuration/#extra-labels
    # Extra labels might be useful for working with nodeSelectors.
    labels:
      node-role.kubernetes.io/control-plane:
    # https://kind.sigs.k8s.io/docs/user/configuration/#extra-mounts
    extraMounts:
      - hostPath: ./kind/patches/containerd/certs.d
        containerPath: /etc/containerd/certs.d
      - hostPath: ./kind/data/control-plane
        containerPath: /data
        # readOnly: true
        # selinuxRelabel: false
        # propagation: None
    # https://kind.sigs.k8s.io/docs/user/configuration/#kubeadm-config-patches
    kubeadmConfigPatches:
      # - |
      #   kind: ClusterConfiguration
      #   apiServer:
      #     extraArgs:
      #       enable-admission-plugins: NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=false"

  - role: worker
    labels:
      node-role.kubernetes.io/worker:
    extraMounts:
      - hostPath: ./kind/patches/containerd/certs.d
        containerPath: /etc/containerd/certs.d
      - hostPath: ./kind/data
        containerPath: /data
    # https://kind.sigs.k8s.io/docs/user/configuration/#extra-port-mappings
    extraPortMappings:
      - protocol: TCP
        containerPort: 30080 # ingress-nginx http port
        hostPort: 80
        # listenAddress: "0.0.0.0"
      - protocol: TCP
        containerPort: 30443 # ingress-nginx https port
        hostPort: 443
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true,exposed=true"

  - role: worker
    labels:
      node-role.kubernetes.io/worker:
    extraMounts:
      - hostPath: ./kind/patches/containerd/certs.d
        containerPath: /etc/containerd/certs.d
      - hostPath: ./kind/data
        containerPath: /data
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=false"

  - role: worker
    labels:
      node-role.kubernetes.io/worker:
    extraMounts:
      - hostPath: ./kind/patches/containerd/certs.d
        containerPath: /etc/containerd/certs.d
      - hostPath: ./kind/data
        containerPath: /data
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=false"
