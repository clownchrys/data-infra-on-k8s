clusterName: "elasticsearch"
nodeGroup: "master"

roles:
  - master
  # - data
  # - data_content
  # - data_hot
  # - data_warm
  # - data_cold
  - ingest
  # - ml
  # - remote_cluster_client
  # - transform

replicas: 1
minimumMasterNodes: 1

esConfig:
  elasticsearch.yml: |
    cluster.routing.allocation.enable: all
    xpack.monitoring.collection.enabled: false
    xpack.security:
      enabled: true
      http.ssl:
        enabled: true
        key: /usr/share/elasticsearch/config/certs/tls.key
        certificate: /usr/share/elasticsearch/config/certs/tls.crt
        certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
      transport.ssl:
        enabled: true
        verification_mode: certificate
        key: /usr/share/elasticsearch/config/certs/tls.key
        certificate: /usr/share/elasticsearch/config/certs/tls.crt
        certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
      authc.realms.native.local.order: 0
    xpack.license.self_generated.type: trial # or basic

  # log4j2.properties: |
  #   key = value

  # role.yml: |

createCert: false

extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: password
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: username

# elastic-credentials
secret:
  enabled: true
  password: "elastic" # generated randomly if not defined

secretMounts:
  - name: elastic-certificates
    secretName: elastic-cluster-local-tls
    path: /usr/share/elasticsearch/config/certs
    defaultMode: 0755

resources:
  requests:
    cpu: "500m"
    memory: "512Mi"
  limits:
    cpu: "750m"
    memory: "768Mi"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  storageClassName: ceph-block
  resources:
    requests:
      storage: 1Gi

rbac:
  create: true
  serviceAccountAnnotations: {}
  serviceAccountName: "es-master-service"
  automountToken: true

protocol: https
httpPort: 9200
transportPort: 9300

service:
  enabled: true
  type: ClusterIP

ingress:
  enabled: true
  annotations:
    # kubernetes.io/ingress.allow-http: "false"
    # ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-target: /
  className: "nginx"
  pathtype: ImplementationSpecific
  hosts:
    - host: elasticsearch.geniouslab.io
      paths:
        - path: /
  # tls:
  #   - secretName: elastic-cluster-local-tls
  #     hosts:
  #       - elasticsearch.geniouslab.io

nameOverride: ""
fullnameOverride: ""
healthNameOverride: ""

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5
